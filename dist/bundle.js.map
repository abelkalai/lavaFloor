{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./static/lib/game.js","webpack:///./static/lib/gameObjects/coin.js","webpack:///./static/lib/gameObjects/enemy.js","webpack:///./static/lib/gameObjects/heart.js","webpack:///./static/lib/gameObjects/iPotion.js","webpack:///./static/lib/gameObjects/lava.js","webpack:///./static/lib/gameObjects/mPotion.js","webpack:///./static/lib/gameObjects/pickUp.js","webpack:///./static/lib/gameObjects/platform.js","webpack:///./static/lib/gameObjects/player.js","webpack:///./static/lib/scenes/hud.js","webpack:///./static/lib/scenes/main.js","webpack:///./static/lib/scenes/menu.js","webpack:///./static/lib/scenes/over.js","webpack:///./static/lib/scenes/pause.js","webpack:///./static/lib/scenes/preload.js","webpack:///./static/lib/utilities/hurtPlayer.js","webpack:///./static/lib/utilities/outOfBounds.js","webpack:///./static/lib/utilities/pauseUtil.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACN;AACA;AACE;AACF;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA,CAAC;;AAED,8BAA8B,0DAAO;AACrC,2BAA2B,uDAAI;AAC/B,2BAA2B,uDAAI;AAC/B,4BAA4B,wDAAK;AACjC,2BAA2B,uDAAI;;AAE/B,gCAAgC,0DAAO;;;;;;;;;;;;;ACzBvC;AAAA;AAAA;AAAiC;;AAElB,mBAAmB,kDAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAoD;;AAErC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;;AAEA;AACA;AACA,cAAc,UAAU;AACxB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM,gEAAU;AAChB;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAiC;;AAElB,oBAAoB,kDAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAiC;;AAElB,sBAAsB,kDAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAiD;AAClC;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;;AAEA;AACA;AACA;AACA;AACA,MAAM,6DAAU;AAChB;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAiC;;AAElB,sBAAsB,kDAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,C;;;;;;;;;;;;ACnBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,6BAA6B;AAC7C,KAAK;;AAEL;AACA;AACA,gBAAgB,+BAA+B;AAC/C,KAAK;;AAEL;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA,KAAK;;AAEL;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,qBAAqB;AACrE;AACA;AACA;AACA;;;;;;;;;;;;;ACtJA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL,wDAAwD,YAAY;;AAEpE;;AAEA;AACA,qDAAqD,kBAAkB;AACvE;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D,YAAY;AACtE;AACA;AACA;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACuB;AACR;AACI;AACE;AACA;AACJ;AACF;AACE;AACU;AACA;AACvC;AACf;AACA;AACA;AACA;AACA,gCAAgC;AAChC,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8DAA8D,eAAe;AAC7E;AACA;;AAEA;AACA,8DAA8D,eAAe;AAC7E;;AAEA;AACA;;AAEA;AACA,yCAAyC,+CAAG;AAC5C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,8DAAM;;AAE5B;AACA,oBAAoB,4DAAI;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uCAAuC;AAC1D;AACA;AACA,UAAU,gEAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,QAAQ,6DAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,QAAQ,6DAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU,+DAAO;AACjB;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,UAAU,+DAAO;AACjB;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,UAAU,4DAAI;AACd;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,UAAU,6DAAK;AACf;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,0EAAW;AACf,IAAI,0EAAW;AACf,IAAI,0EAAW;AACf,IAAI,0EAAW;;AAEf,IAAI,uEAAa;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D,OAAO;AACP;AACA;AACA;;;;;;;;;;;;;ACtUA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAA4B;AACb;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,gDAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAsD;;AAEvC;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,uEAAa;AACjB;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnKA;AAAA;AAAA;AACe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./static/lib/game.js\");\n","import Preload from \"./scenes/preload.js\";\r\nimport Menu from \"./scenes/menu.js\";\r\nimport Main from \"./scenes/main.js\";\r\nimport Pause from \"./scenes/pause.js\";\r\nimport Over from \"./scenes/over.js\";\r\n\r\nconst game = new Phaser.Game({\r\n  type: Phaser.AUTO,\r\n  width: 800,\r\n  height: 600,\r\n  physics: {\r\n    default: \"arcade\",\r\n    arcade: {\r\n      gravity: { y: 300 },\r\n      debug: false\r\n    }\r\n  }\r\n});\r\n\r\ngame.scene.add(\"preload\", new Preload());\r\ngame.scene.add(\"main\", new Main(game));\r\ngame.scene.add(\"menu\", new Menu());\r\ngame.scene.add(\"pause\", new Pause());\r\ngame.scene.add(\"over\", new Over());\r\n\r\ngame.scene.start(\"preload\", new Preload());\r\n","import Pickup from \"./pickUp.js\";\r\n\r\nexport default class Coin extends Pickup {\r\n  constructor(props) {\r\n    super({\r\n      scene: props.scene,\r\n      type: \"coin\",\r\n      scale: 0.065,\r\n      group: props.group,\r\n      xPos: props.xPos, \r\n      yPos: props.yPos, \r\n      allowGravity: false\r\n    });\r\n    this.coinSound = this.scene.sound.add(\"collectCoin\");\r\n    this.coinMultiplierCollect = this.scene.sound.add(\"coinMultiplierCollect\");\r\n    this.collide()\r\n  }\r\n\r\n  collide() {\r\n    //Collision with coin\r\n    this.scene.physics.add.overlap(\r\n      this.scene.player.character,\r\n      this.sprite,\r\n      getCoin,\r\n      null,\r\n      this\r\n    );\r\n\r\n    //Get Coin Function\r\n    function getCoin(character, coin) {\r\n      this.scene.player.scoreMultiplier\r\n        ? this.coinMultiplierCollect.play()\r\n        : this.coinSound.play();\r\n      coin.disableBody(true, true);\r\n      this.scene.hud.score += this.scene.hud.scoreMultiplier\r\n        ? 100\r\n        : 50;\r\n      this.scene.hud.scoreText.setText(\r\n        `Score:${this.scene.hud.score}`\r\n      );\r\n    }\r\n  }\r\n}\r\n","import hurtPlayer from \"../utilities/hurtPlayer.js\";\r\n\r\nexport default class Enemy {\r\n  constructor(props) {\r\n    this.scene = props.scene;\r\n    this.speed = props.speed;\r\n    this.type = props.type;\r\n    this.scale = props.scale;\r\n    this.xPos = props.xPos;\r\n    this.yPos = props.yPos;\r\n    this.group = props.group;\r\n    this.allowGravity = props.allowGravity;\r\n    this.frameRate = props.frameRate;\r\n    this.collide = this.scene.sound.add(\"collideEnemy\");\r\n    this.animate();\r\n    this.render();\r\n    this.update();\r\n  }\r\n\r\n  render() {\r\n    this.sprite = this.group.create(\r\n      this.xPos,\r\n      this.yPos,\r\n      this.type\r\n    );\r\n    this.sprite.setDepth(125); \r\n    this.sprite.setScale(this.scale);\r\n    this.sprite.body.setAllowGravity(this.allowGravity);\r\n    this.scene.physics.add.collider(\r\n      this.sprite,\r\n      this.scene.platforms\r\n    );\r\n    this.sprite.anims.play(`${this.type}Walk`, true);\r\n    this.sprite.setVelocityX(this.speed);\r\n  }\r\n\r\n  animate() {\r\n    this.scene.anims.create({\r\n      key: `${this.type}Walk`,\r\n      frames: this.scene.anims.generateFrameNumbers(this.type, {\r\n        start: 0,\r\n        end: 1\r\n      }),\r\n      frameRate: this.frameRate,\r\n      repeat: -1\r\n    });\r\n  }\r\n\r\n  update() {\r\n    //Collide with player\r\n    this.scene.physics.add.overlap(\r\n      this.scene.player.character,\r\n      this.sprite,\r\n      hurtPlayer,\r\n      null,\r\n      { this: this, enemy: this, scene: this.scene }\r\n    );\r\n\r\n    //Wall Collision\r\n    this.scene.physics.add.overlap(\r\n      this.sprite,\r\n      this.scene.walls,\r\n      () => {\r\n        this.sprite.setVelocityX(-this.sprite.body.velocity.x);\r\n        this.sprite.toggleFlipX();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import Pickup from \"./pickUp.js\";\r\n\r\nexport default class Heart extends Pickup {\r\n  constructor(props) {\r\n    super({\r\n      scene: props.scene,\r\n      type: \"heart\",\r\n      scale: 1,\r\n      group: props.group,\r\n      xPos: props.xPos, \r\n      yPos: props.yPos, \r\n      allowGravity: false\r\n    });\r\n    this.heartSound = this.scene.sound.add(\"collectHeart\");\r\n    this.collide()\r\n  }\r\n\r\n  collide() {\r\n    // Collision with heart pickup\r\n    this.scene.physics.add.overlap(\r\n      this.scene.player.character,\r\n      this.sprite,\r\n      getHeart,\r\n      null,\r\n      this\r\n    );\r\n\r\n    // Get Heart Function\r\n    function getHeart(character, heart) {\r\n      if (this.scene.hud.health <= 2) {\r\n        this.scene.hud.health++;\r\n        this.heartSound.play();\r\n        heart.disableBody(true, true);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import Pickup from \"./pickUp.js\";\r\n\r\nexport default class IPotion extends Pickup {\r\n  constructor(props) {\r\n    super({\r\n      scene: props.scene,\r\n      type: \"iPotion\",\r\n      scale: 0.4,\r\n      group: props.group,\r\n      xPos: props.xPos,\r\n      yPos: props.yPos,\r\n      allowGravity: true\r\n    });\r\n    this.collide();\r\n  }\r\n\r\n  collide() {\r\n    // Collision with potion\r\n    this.scene.physics.add.overlap(\r\n      this.scene.player.character,\r\n      this.sprite,\r\n      getPotion,\r\n      null,\r\n      this\r\n    );\r\n\r\n    function getPotion(character, iPotion) {\r\n      if (this.scene.player.enemyCollide) {\r\n        this.scene.player.enemyCollide = false;\r\n        iPotion.disableBody(true, true);\r\n\r\n        let isInvincible = setInterval(() => {\r\n          character.tint = Math.random() * 0xffffff;\r\n        }, 100);\r\n        this.scene.backgroundMusic.pause();\r\n        this.scene.invincibleMusic.play();\r\n        setTimeout(() => {\r\n          this.scene.player.enemyCollide = true;\r\n          clearInterval(isInvincible);\r\n          character.clearTint();\r\n          this.scene.invincibleMusic.pause();\r\n          this.scene.backgroundMusic.resume();\r\n        }, 7500);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import hurtPlayer from \"../utilities/hurtPlayer\";\r\nexport default class Lava {\r\n  constructor(scene) {\r\n    this.scene = scene;\r\n    this.collide = this.scene.sound.add(\"burn\");\r\n    this.counter = 0;\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.lavaObj = this.scene.physics.add.sprite(100, 1225, \"lava\");\r\n    this.lavaObj.body.setAllowGravity(false);\r\n    this.lavaObj.body.setAccelerationY(-0.35);\r\n    this.lavaObj.setDepth(50);\r\n    this.volume = 0.5;\r\n    this.lavaSound = this.scene.sound.add(\"lava\", { volume: this.volume });\r\n    this.lavaSound.loop = true;\r\n\r\n    //Collision with player\r\n    this.scene.physics.add.overlap(\r\n      this.scene.player.character,\r\n      this.lavaObj,\r\n      hurtPlayer,\r\n      null,\r\n      { this: this, enemy: this, scene: this.scene }\r\n    );\r\n  }\r\n\r\n  update() {\r\n    let distance = Math.abs(this.scene.player.character.y - this.lavaObj.y);\r\n    this.lavaSound.volume =\r\n      (12 - distance / 125) / 12 < 0 ? 0 : (12 - distance / 125) / 12;\r\n  }\r\n}\r\n","import Pickup from \"./pickUp.js\";\r\n\r\nexport default class MPotion extends Pickup {\r\n  constructor(props) {\r\n    super({\r\n      scene: props.scene,\r\n      type: \"mPotion\",\r\n      scale: 0.4,\r\n      group: props.group,\r\n      xPos: props.xPos, \r\n      yPos: props.yPos, \r\n      allowGravity: true\r\n    });\r\n    this.multiplierSound = this.scene.sound.add(\"multiplierPotion\");\r\n    this.collide()\r\n  }\r\n\r\n  collide() {\r\n    // Collision with score multiplier pickup\r\n    this.scene.physics.add.overlap(\r\n      this.scene.player.character,\r\n      this.sprite,\r\n      getMultiplier,\r\n      null,\r\n      this\r\n    );\r\n    // Get Multiplier function\r\n    function getMultiplier(character, mPotion) {\r\n      this.multiplierSound.play();\r\n      mPotion.disableBody(true, true);\r\n\r\n      this.scene.hud.scoreMultiplier = true;\r\n      setTimeout(() => {\r\n        this.scene.hud.scoreMultiplier = false;\r\n      }, 10000);\r\n    }\r\n  }\r\n}\r\n","export default class Pickup {\r\n  constructor(props) {\r\n    this.scene = props.scene\r\n    this.group = props.group;\r\n    this.xPos = props.xPos;\r\n    this.yPos = props.yPos;\r\n    this.scale = props.scale;\r\n    this.type = props.type;\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.sprite = this.group.create(this.xPos, this.yPos, this.type);\r\n    this.sprite.setDepth(100);\r\n    this.sprite.setScale(this.scale);\r\n    this.scene.physics.add.collider(\r\n      this.sprite,\r\n      this.scene.platforms\r\n    );\r\n  }\r\n}\r\n","export default class Platform{\r\n    constructor(props){\r\n        this.platforms=props.platforms\r\n        this.walls=props.walls\r\n        this.x=props.x\r\n        this.y=props.y\r\n        this.width=props.width/2\r\n        this.type=props.type\r\n        this.spawnBoundary()\r\n    }\r\n\r\n    spawnBoundary() {\r\n        let plat=this.platforms.create(this.x, this.y, this.type);\r\n        plat.setDepth(100)\r\n        this.walls.create(this.x-this.width <= 0 ? 2 : this.x-this.width, this.y - 65, \"wall\");\r\n        this.walls.create(this.x+this.width >= 800 ? 797 : this.x+this.width, this.y - 65, \"wall\");\r\n        this.walls.setVisible(false)\r\n      }\r\n\r\n}","export default class Player {\r\n  constructor(scene) {\r\n    this.scene = scene;\r\n    this.hurtAgain;\r\n    this.playerStanding = true;\r\n    this.characterFacingRight = true;\r\n    this.enemyCollide = true;\r\n    this.yMax = 0;\r\n    this.scoreHeight = 500;\r\n    this.deathSound = this.scene.sound.add(\"deathSound\");\r\n    this.render();\r\n    this.animate();\r\n  }\r\n\r\n  render() {\r\n    //Adds player character to the scene\r\n    this.character = this.scene.physics.add.sprite(400, 438, \"character\");\r\n    this.character.setCollideWorldBounds(true);\r\n    this.character.setDepth(5);\r\n    this.scene.physics.add.collider(this.character, this.scene.platforms);\r\n    this.yStart = this.character.y;\r\n    this.getPoints = this.scene.sound.add(\"scoreIncrease\");\r\n    this.cursors = this.scene.input.keyboard.createCursorKeys();\r\n  }\r\n\r\n  animate() {\r\n    this.scene.anims.create({\r\n      key: \"right\",\r\n      frames: this.scene.anims.generateFrameNumbers(\"walk\", {\r\n        start: 0,\r\n        end: 1\r\n      }),\r\n      repeat: -1,\r\n      frameRate: 20\r\n    });\r\n\r\n    this.scene.anims.create({\r\n      key: \"left\",\r\n      frames: this.scene.anims.generateFrameNumbers(\"walk_b\", {\r\n        start: 0,\r\n        end: 1\r\n      }),\r\n      repeat: -1,\r\n      frameRate: 20\r\n    });\r\n\r\n    this.scene.anims.create({\r\n      key: \"idle\",\r\n      frames: [{ key: \"character\", frame: 0 }]\r\n    });\r\n\r\n    this.scene.anims.create({\r\n      key: \"idle_b\",\r\n      frames: [{ key: \"character_b\", frame: 0 }]\r\n    });\r\n\r\n    this.scene.anims.create({\r\n      key: \"jump\",\r\n      frames: [{ key: \"jump\", frame: 0 }],\r\n      repeat: -1,\r\n      frameRate: 20\r\n    });\r\n\r\n    this.scene.anims.create({\r\n      key: \"jump_b\",\r\n      frames: [{ key: \"jump_b\", frame: 0 }],\r\n      repeat: -1,\r\n      frameRate: 20\r\n    });\r\n  }\r\n\r\n  update() {\r\n    //Record player maximum height\r\n    this.yMax = Math.max(this.yMax, Math.abs(this.character.y - this.yStart));\r\n\r\n    //Handle jumping\r\n    if (this.character.body.onFloor() && this.cursors.up.isDown) {\r\n      this.characterFacingRight\r\n        ? this.character.anims.play(\"jump\", true)\r\n        : this.character.anims.play(\"jump_b\", true);\r\n      this.character.setVelocityY(-235);\r\n    }\r\n\r\n    // Holding arrow keys while jumping right\r\n    else if (\r\n      this.cursors.right.isDown &&\r\n      this.character.body.onFloor() &&\r\n      this.cursors.up.isDown\r\n    ) {\r\n      this.character.anims.play(\"jump\", true);\r\n      this.character.setVelocityY(-235);\r\n      this.character.setVelocityX(200);\r\n      this.characterFacingRight = true;\r\n    }\r\n\r\n    // Holding arrow keys while jumping left\r\n    else if (\r\n      this.cursors.left.isDown &&\r\n      this.character.body.onFloor() &&\r\n      this.cursors.up.isDown\r\n    ) {\r\n      this.character.anims.play(\"jump_b\", true);\r\n      this.character.setVelocityY(-235);\r\n      this.character.setVelocityX(-200);\r\n      this.characterFacingRight = false;\r\n    }\r\n\r\n    // Controlling right in mid-air\r\n    else if (this.cursors.right.isDown && !this.character.body.onFloor()) {\r\n      this.character.anims.play(\"jump\", true);\r\n      this.character.setVelocityX(200);\r\n      this.characterFacingRight = true;\r\n    }\r\n\r\n    // Controlling left in mid-air\r\n    else if (this.cursors.left.isDown && !this.character.body.onFloor()) {\r\n      this.character.anims.play(\"jump_b\", true);\r\n      this.character.setVelocityX(-200);\r\n      this.characterFacingRight = false;\r\n    }\r\n\r\n    //Moving right on ground\r\n    else if (this.cursors.right.isDown && this.character.body.onFloor()) {\r\n      this.character.anims.play(\"right\", true);\r\n      this.character.setVelocityX(275);\r\n      this.characterFacingRight = true;\r\n\r\n      //Moving left on ground\r\n    } else if (this.cursors.left.isDown && this.character.body.onFloor()) {\r\n      this.character.anims.play(\"left\", true);\r\n      this.character.setVelocityX(-275);\r\n      this.characterFacingRight = false;\r\n    }\r\n\r\n    //Resetting animation on idle\r\n    else if (this.character.body.onFloor()) {\r\n      this.character.setVelocityX(0);\r\n      this.characterFacingRight\r\n        ? this.character.anims.play(\"idle\", true)\r\n        : this.character.anims.play(\"idle_b\", true);\r\n    }\r\n\r\n    //Update score based on heighest point reached, increasing every 500\r\n    if (this.character.y < this.scoreHeight - 500) {\r\n      this.scoreHeight -= 500;\r\n      this.scene.hud.score += this.scene.hud.scoreMultiplier ? 200 : 100;\r\n      this.scene.hud.scoreText.setText(`Score:${this.scene.hud.score}`);\r\n      this.getPoints.play();\r\n    }\r\n  }\r\n}\r\n","export default class Hud extends Phaser.Scene {\r\n  constructor() {\r\n    super(\"hud\");\r\n    this.score = 0;\r\n    this.health = 3;\r\n    this.soundContent = \"ON\";\r\n    this.scoreMultiplier = false;\r\n  }\r\n\r\n  create() {\r\n    // Score\r\n    this.scoreText = this.add.text(20, 20, `Score:${this.score}`, {\r\n      fontSize: \"32px\",\r\n      fill: \"#ee3231\"\r\n    });\r\n\r\n    // Multipler Text\r\n    this.multiplierText = this.add.text(500, 48, \"Score Multiplier Active!\", {\r\n      fontSize: \"20px\",\r\n      fill: \"#ee3231\"\r\n    });\r\n    this.multiplierText.visible = false;\r\n\r\n    // Health\r\n    this.healthText = this.add.text(20, 50, \"Health: \", {\r\n      fontSize: \"32px\",\r\n      fill: \"#ee3231\"\r\n    });\r\n\r\n    this.healthImage = this.add.image(198, 66, `heart_${this.health}`);\r\n\r\n    this.oldHealth = this.health;\r\n\r\n    // Sound Toggle\r\n    this.soundText = this.add.text(620, 20, `Sound:${this.soundContent}`, {\r\n      fontSize: \"32px\",\r\n      fill: \"#ee3231\"\r\n    });\r\n    this.oKey = this.input.keyboard.addKey(\"O\");\r\n  }\r\n\r\n  update() {\r\n    // Player can turn sound off with \"o\" key\r\n    this.oKey.onDown = () => {\r\n      this.soundContent = this.soundContent === \"ON\" ? \"OFF\" : \"ON\";\r\n      this.sound.mute = this.soundContent === \"OFF\" ? true : false;\r\n      this.soundText.setText(`Sound:${this.soundContent}`);\r\n    };\r\n\r\n    //Updates visibility based on multiplier potion pickup\r\n    this.multiplierText.visible = this.scoreMultiplier;\r\n\r\n    //Updates image\r\n    if (this.oldHealth != this.health) {\r\n      this.oldHealth = this.health;\r\n      this.healthImage.destroy();\r\n      this.healthImage = this.add.image(198, 66, `heart_${this.health}`);\r\n    }\r\n  }\r\n}\r\n","import Hud from \"./hud.js\";\r\nimport Platform from \"../gameObjects/platform.js\";\r\nimport Lava from \"../gameObjects/lava.js\";\r\nimport Player from \"../gameObjects/player.js\";\r\nimport MPotion from \"../gameObjects/mPotion.js\";\r\nimport IPotion from \"../gameObjects/iPotion.js\";\r\nimport Heart from \"../gameObjects/heart.js\";\r\nimport Coin from \"../gameObjects/coin.js\";\r\nimport Enemy from \"../gameObjects/enemy.js\";\r\nimport pauseFunction from \"../utilities/pauseUtil.js\";\r\nimport outOfBounds from \"../utilities/outOfBounds.js\";\r\nexport default class Main extends Phaser.Scene {\r\n  constructor(game) {\r\n    super(\"main\");\r\n    this.game = game;\r\n    this.nextSet = 2;\r\n    this.heighestBoundary = 500; //Heighest point player reached. For scoring purposes.\r\n    this.heightIncrease = -400; //Next height to increase for platforms\r\n    this.latestEnvHeight = 0;\r\n  }\r\n\r\n  create() {\r\n    //Background\r\n    this.backGround = this.add.image(400, 300, \"background\");\r\n\r\n    // Background Music\r\n    this.backgroundMusic = this.sound.add(\"backgroundMusic\", { volume: 0.35 });\r\n    this.backgroundMusic.loop = true;\r\n    this.backgroundMusic.play();\r\n\r\n    // Invincible Music\r\n    this.invincibleMusic = this.sound.add(\"invincibleMusic\", { volume: 0.35 });\r\n    this.invincibleMusic.loop = true;\r\n\r\n    // Pause Sound\r\n    this.pauseSound = this.sound.add(\"pauseSound\");\r\n\r\n    //HUD\r\n    this.hud = this.scene.add(\"hud\", new Hud());\r\n    this.scene.launch(\"hud\");\r\n\r\n    // Powerups\r\n    this.pickups = this.physics.add.group();\r\n\r\n    // //Boundaries\r\n    this.renderBoundary();\r\n\r\n    // Player\r\n    this.player = new Player(this);\r\n\r\n    // Lava\r\n    this.lava = new Lava(this);\r\n    this.lava.lavaSound.play();\r\n\r\n    //Enemies\r\n    this.enemies = this.physics.add.group();\r\n\r\n    // Initial Boundaries\r\n    this.createBoundary(1, 0, 346, \"platform\");\r\n    this.createBoundary(2, 0, 346, \"platform\");\r\n    this.createBoundary(3, 0, 346, \"platform\");\r\n\r\n    // Set Camera Bounds\r\n    this.cameras.main.startFollow(this.player.character, true, 0, 1);\r\n    this.cameras.main.setBackgroundColor(0xcbeffc);\r\n  }\r\n\r\n  renderBoundary() {\r\n    // Static Groups\r\n    this.platforms = this.physics.add.staticGroup();\r\n    this.walls = this.physics.add.staticGroup();\r\n    this.physics.collide(this.platforms, this.walls);\r\n\r\n    // Ground\r\n    let ground = this.platforms.create(280, 500, \"platform\");\r\n    ground.setDepth(25);\r\n\r\n    //Hash map that stores boundaries\r\n    this.boundaryList = new Map();\r\n    this.boundaryList.set(1, [\r\n      [650, 450],\r\n      [175, 375],\r\n      [0, 285],\r\n      [-100, 200]\r\n    ]);\r\n\r\n    this.boundaryList.set(2, [\r\n      [350, 160],\r\n      [700, 100],\r\n      [925, 15]\r\n    ]);\r\n\r\n    this.boundaryList.set(3, [\r\n      [360, -40],\r\n      [10, -110],\r\n      [-125, -195]\r\n    ]);\r\n\r\n    // Background sprites group\r\n    this.backSprites = this.physics.add.group();\r\n\r\n    //Last boundary is always on top so set it as the heighest\r\n    this.heighestBoundary = this.platforms.getChildren()[\r\n      this.platforms.getChildren().length - 1\r\n    ].y;\r\n  }\r\n\r\n  //Method Creates platform, random item or enemy and invisible wall\r\n  createBoundary(set, yAdjust, width, type) {\r\n    for (let i = 0; i < this.boundaryList.get(set).length; i++) {\r\n      let xPos = this.boundaryList.get(set)[i][0];\r\n      let yPos = this.boundaryList.get(set)[i][1] + yAdjust;\r\n      new Platform({\r\n        platforms: this.platforms,\r\n        walls: this.walls,\r\n        x: xPos,\r\n        y: yPos,\r\n        width: width,\r\n        type: type\r\n      });\r\n      let randInt = Phaser.Math.Between(1, 5);\r\n      if (randInt === 1 && xPos >= 10 && xPos < 900) {\r\n        this.renderRandomEnemy(xPos + 50, yPos);\r\n      } else if (randInt === 2) {\r\n        this.renderRandomPowerUp(xPos, yPos);\r\n      }\r\n\r\n      let xStart = Phaser.Math.Between(50, 650);\r\n      if (\r\n        Phaser.Math.Between(0, 5) === 1 &&\r\n        this.latestEnvHeight - 200 > yPos &&\r\n        this.player.character.y < -1500\r\n      ) {\r\n        if (this.player.character.y > -8500) {\r\n          let backgroundObj = this.backSprites.create(\r\n            xStart,\r\n            yPos - 125,\r\n            \"cloud\"\r\n          );\r\n          backgroundObj.setVelocityX(xStart < 300 ? 10 : -10);\r\n          backgroundObj.setDepth(1);\r\n          backgroundObj.body.setAllowGravity(false);\r\n          this.latestEnvHeight = yPos;\r\n        }\r\n      } else if (this.player.character.y < -9500) {\r\n        let backgroundObj = this.backSprites.create(xStart, yPos, \"star\");\r\n        backgroundObj.setScale(0.25);\r\n        backgroundObj.setDepth(1);\r\n        \r\n        this.latestEnvHeight = yPos;\r\n      }\r\n    }\r\n  }\r\n  renderEnemyOne(xPos, yPos) {\r\n    new Enemy({\r\n      scene: this,\r\n      speed: -40,\r\n      type: \"enemyOne\",\r\n      scale: 0.085,\r\n      group: this.enemies,\r\n      xPos: xPos,\r\n      yPos: yPos,\r\n      allowGravity: true,\r\n      frameRate: 5\r\n    });\r\n  }\r\n\r\n  renderEnemyTwo(xPos, yPos) {\r\n    new Enemy({\r\n      scene: this,\r\n      speed: 80,\r\n      type: \"enemyTwo\",\r\n      scale: 0.065,\r\n      group: this.enemies,\r\n      xPos: xPos,\r\n      yPos: yPos,\r\n      allowGravity: true,\r\n      frameRate: 5\r\n    });\r\n  }\r\n\r\n  renderEnemyThree(xPos, yPos) {\r\n    new Enemy({\r\n      scene: this,\r\n      speed: -50,\r\n      type: \"enemyThree\",\r\n      scale: 0.75,\r\n      group: this.enemies,\r\n      xPos: xPos,\r\n      yPos: yPos,\r\n      allowGravity: false,\r\n      frameRate: 5\r\n    });\r\n  }\r\n\r\n  renderRandomEnemy(xPos, yPos) {\r\n    let randInt = Phaser.Math.Between(1, 3);\r\n    if (randInt == 1) {\r\n      this.renderEnemyOne(xPos, yPos - 32.5);\r\n    } else if (randInt == 2) {\r\n      this.renderEnemyTwo(xPos, yPos - 37.5);\r\n    } else if (randInt == 3) {\r\n      this.renderEnemyThree(xPos, yPos - 50);\r\n    }\r\n  }\r\n\r\n  renderRandomPowerUp(xPos, yPos) {\r\n    if (xPos >= 925) {\r\n      xPos = 775;\r\n    } else if (xPos < 0) {\r\n      xPos = 25;\r\n    } else if (xPos <= 15) {\r\n      xPos = 75;\r\n    }\r\n    let randInt = Phaser.Math.Between(1, 4);\r\n    if (randInt === 1) {\r\n      new MPotion({\r\n        scene: this,\r\n        group: this.pickups,\r\n        xPos: xPos,\r\n        yPos: yPos - 38\r\n      });\r\n    } else if (randInt === 2) {\r\n      new IPotion({\r\n        scene: this,\r\n        group: this.pickups,\r\n        xPos: xPos,\r\n        yPos: yPos - 38\r\n      });\r\n    } else if (randInt === 3) {\r\n      new Coin({\r\n        scene: this,\r\n        group: this.pickups,\r\n        xPos: xPos,\r\n        yPos: yPos - 35\r\n      });\r\n    } else if (randInt === 4) {\r\n      new Heart({\r\n        scene: this,\r\n        group: this.pickups,\r\n        xPos: xPos,\r\n        yPos: yPos - 30\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.player.update();\r\n    this.lava.update();\r\n\r\n    outOfBounds(this, this.enemies);\r\n    outOfBounds(this, this.pickups);\r\n    outOfBounds(this, this.platforms);\r\n    outOfBounds(this, this.backSprites);\r\n\r\n    pauseFunction(this, \"main\");\r\n\r\n    this.physics.world.bounds.setTo(\r\n      0,\r\n      -this.player.yMax,\r\n      this.game.scale.width,\r\n      this.game.scale.height + this.player.yMax\r\n    );\r\n\r\n    if (this.heighestBoundary + 500 > this.player.character.y) {\r\n      this.createBoundary(this.nextSet, this.heightIncrease, 346, \"platform\");\r\n      this.nextSet = this.nextSet == 2 ? 3 : 2;\r\n      this.heightIncrease -= this.nextSet == 2 ? 400 : 0;\r\n      this.heighestBoundary = this.platforms.getChildren()[\r\n        this.platforms.getChildren().length - 1\r\n      ].y;\r\n    }\r\n\r\n    //Adjusts background based on player height\r\n    if (this.player.character.y < 0) {\r\n      if (this.player.character.y < -2500 && this.player.character.y > -4500)\r\n        this.cameras.main.setBackgroundColor(0x9fe1f9);\r\n      else if (\r\n        this.player.character.y < -4500 &&\r\n        this.player.character.y > -5500\r\n      )\r\n        this.cameras.main.setBackgroundColor(0x6ed2f7);\r\n      else if (\r\n        this.player.character.y < -5500 &&\r\n        this.player.character.y > -6500\r\n      )\r\n        this.cameras.main.setBackgroundColor(0x3ec3f4);\r\n      else if (\r\n        this.player.character.y < -6500 &&\r\n        this.player.character.y > -7500\r\n      )\r\n        this.cameras.main.setBackgroundColor(0x0eb4f1);\r\n      else if (\r\n        this.player.character.y < -7500 &&\r\n        this.player.character.y > -8500\r\n      )\r\n        this.cameras.main.setBackgroundColor(0x0b90c1);\r\n      else if (\r\n        this.player.character.y < -8500 &&\r\n        this.player.character.y > -9500\r\n      )\r\n        this.cameras.main.setBackgroundColor(0x086c91);\r\n      else if (\r\n        this.player.character.y < -9500 &&\r\n        this.player.character.y > -10500\r\n      )\r\n        this.cameras.main.setBackgroundColor(0x064860);\r\n      else if (\r\n        this.player.character.y < -10500 &&\r\n        this.player.character.y > -11500\r\n      )\r\n        this.cameras.main.setBackgroundColor(0x032430);\r\n      else if (this.player.character.y < -11500)\r\n        this.cameras.main.setBackgroundColor(0x000000);\r\n    }\r\n\r\n    if (this.hud.health === 0) {\r\n      this.backgroundMusic.destroy();\r\n      this.lava.lavaSound.destroy();\r\n      setTimeout(() => {\r\n        this.player.deathSound.play();\r\n        this.scene.remove(\"hud\");\r\n        this.scene.start(\"over\", { score: this.hud.score }), 100;\r\n      });\r\n    }\r\n  }\r\n}\r\n","export default class Menu extends Phaser.Scene {\r\n  constructor() {\r\n    super(\"menu\");\r\n  }\r\n\r\n  create() {\r\n    this.add.image(400, 300, \"background\");\r\n    this.add.text(207.5, 50, \"The Floor is Lava!\", {\r\n      fontFamily: \"inGame\",\r\n      fontSize: \"60px\",\r\n      color: \"#000000\"\r\n    });\r\n\r\n    this.add.text(185, 400, \"Press Enter to Start\", {\r\n      fontFamily: \"inGame\",\r\n      fontSize: \"60px\",\r\n      color: \"#000000\"\r\n    });\r\n    this.enterKey = this.input.keyboard.addKey(\"ENTER\");\r\n  }\r\n\r\n  update() {\r\n    this.enterKey.onDown = () => {\r\n      this.scene.start(\"main\");\r\n    };\r\n  }\r\n}\r\n","import Main from \"./main.js\"\r\nexport default class Over extends Phaser.Scene {\r\n  constructor() {\r\n    super(\"over\");\r\n  }\r\n\r\n  init(data) {\r\n    this.finalScore = data.score;\r\n  }\r\n\r\n  create() {\r\n    this.scene.remove(\"main\");\r\n    this.scene.add(\"main\", new Main(this.scene.game));\r\n    this.enterKey = this.input.keyboard.addKey(\"ENTER\");\r\n    this.add.image(400, 300, \"lava\");\r\n    this.add.text(275, 50, \"Game Over\", {\r\n      fontFamily: \"inGame\",\r\n      fontSize: \"60px\",\r\n      color: \"#ffffff\"\r\n    });\r\n    this.add.text(230, 200, `Final Score: ${this.finalScore}`, {\r\n      fontFamily: \"inGame\",\r\n      fontSize: \"60px\",\r\n      color: \"#ffffff\"\r\n    });\r\n    this.add.text(140, 400, \"Press ENTER to Try Again\", {\r\n      fontFamily: \"inGame\",\r\n      fontSize: \"60px\",\r\n      color: \"#ffffff\"\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.enterKey.onDown = () => {\r\n      this.scene.start(\"main\");\r\n    };\r\n  }\r\n}\r\n","import pauseFunction from \"../utilities/pauseUtil.js\";\r\n\r\nexport default class Pause extends Phaser.Scene {\r\n  constructor() {\r\n    super(\"pause\");\r\n  }\r\n\r\n  create() {\r\n    this.pauseImage = this.add.image(400, 300, \"pauseImage\");\r\n    this.pauseImage.setDepth(200)\r\n    this.pauseSound= this.sound.add(\"pauseSound\")\r\n  }\r\n\r\n  update() {\r\n    pauseFunction(this, \"pause\");\r\n  }\r\n}\r\n","export default class Preload extends Phaser.Scene {\r\n  constructor() {\r\n    super(\"preload\");\r\n  }\r\n\r\n  preload() {\r\n    let pBox = this.add.graphics();\r\n    pBox.fillStyle(0x222222, 0.8);\r\n    pBox.fillRect(240, 270, 335, 35);\r\n    let loadText = this.make.text({\r\n      x: 350,\r\n      y: 240,\r\n      text: \"Loading...\",\r\n      style: {\r\n        font: \"30px\"\r\n      }\r\n    });\r\n\r\n    let pBar = this.add.graphics();\r\n\r\n    this.load.on(\"progress\", function(val) {\r\n      pBar.fillStyle(0xffffff, 1);\r\n      pBar.fillRect(245, 275, 325 * val, 25);\r\n    });\r\n\r\n    this.load.on(\"complete\", () => {\r\n      pBox.destroy();\r\n      pBar.destroy();\r\n      loadText.destroy();\r\n    });\r\n    \r\n    //Load Enviornment Assetss\r\n    this.load.image(\"background\", \"/static/assets/env/background.png\");\r\n    this.load.image(\"platform\", \"/static/assets/env/grass.png\");\r\n    this.load.image(\"platformSmall\", \"/static/assets/env/grassSmall.png\");\r\n    this.load.image(\"lava\", \"/static/assets/env/lava.png\");\r\n    this.load.image(\"wall\", \"/static/assets/env/invisibleWall.png\");\r\n    this.load.image(\"cloud\", \"/static/assets/env/cloud.png\");\r\n    this.load.image(\"star\", \"/static/assets/env/star.png\");\r\n\r\n    // Health\r\n    this.load.image(\"heart_3\", \"/static/assets/sprites/heart_3.png\");\r\n    this.load.image(\"heart_2\", \"/static/assets/sprites/heart_2.png\");\r\n    this.load.image(\"heart_1\", \"/static/assets/sprites/heart_1.png\");\r\n    this.load.image(\"heart_0\", \"/static/assets/sprites/heart_0.png\");\r\n\r\n    // Heart to Pick Up\r\n    this.load.spritesheet(\"heart\", \"/static/assets/sprites/heart_world.png\", {\r\n      frameWidth: 50,\r\n      frameHeight: 20\r\n    });\r\n\r\n    // Coin\r\n    this.load.spritesheet(\"coin\", \"/static/assets/sprites/coin.png\", {\r\n      frameWidth: 563,\r\n      frameHeight: 564\r\n    });\r\n\r\n    // Ground Enemy\r\n    this.load.spritesheet(\"enemyOne\", \"/static/assets/sprites/enemy_1.png\", {\r\n      frameWidth: 350,\r\n      frameHeight: 371\r\n    });\r\n\r\n    // Ground Enemy 2\r\n    this.load.spritesheet(\"enemyTwo\", \"/static/assets/sprites/enemy_2.png\", {\r\n      frameWidth: 580,\r\n      frameHeight: 650\r\n    });\r\n\r\n    // Enemy 3\r\n    this.load.spritesheet(\"enemyThree\", \"/static/assets/sprites/enemy_3.png\", {\r\n      frameWidth: 60,\r\n      frameHeight: 48\r\n    });\r\n\r\n    // Invincibility Potion\r\n    this.load.spritesheet(\r\n      \"iPotion\",\r\n      \"/static/assets/sprites/invincibilityPotion.png\",\r\n      {\r\n        frameWidth: 125,\r\n        frameHeight: 120\r\n      }\r\n    );\r\n\r\n    // Score Multiplier Potion\r\n    this.load.spritesheet(\r\n      \"mPotion\",\r\n      \"/static/assets/sprites/multiplierPotion.png\",\r\n      {\r\n        frameWidth: 125,\r\n        frameHeight: 120\r\n      }\r\n    );\r\n\r\n    // Player\r\n    this.load.spritesheet(\"character\", \"/static/assets/sprites/stand.png\", {\r\n      frameWidth: 67,\r\n      frameHeight: 92\r\n    });\r\n\r\n    this.load.spritesheet(\"character_b\", \"/static/assets/sprites/stand_b.png\", {\r\n      frameWidth: 67,\r\n      frameHeight: 92\r\n    });\r\n    this.load.spritesheet(\"walk\", \"/static/assets/sprites/walk.png\", {\r\n      frameWidth: 80,\r\n      frameHeight: 92\r\n    });\r\n    this.load.spritesheet(\"walk_b\", \"/static/assets/sprites/walk_b.png\", {\r\n      frameWidth: 80,\r\n      frameHeight: 92\r\n    });\r\n    this.load.spritesheet(\"jump\", \"/static/assets/sprites/jump.png\", {\r\n      frameWidth: 80,\r\n      frameHeight: 96\r\n    });\r\n    this.load.spritesheet(\"jump_b\", \"/static/assets/sprites/jump_b.png\", {\r\n      frameWidth: 80,\r\n      frameHeight: 96\r\n    });\r\n\r\n    // Pause Button and sound\r\n    this.load.image(\"pauseImage\", \"/static/assets/env/pause.png\");\r\n    this.load.audio(\"pauseSound\", \"/static/assets/sounds/pause.mp3\");\r\n\r\n    // Main Scene Sounds\r\n    this.load.audio(\"collectCoin\", \"/static/assets/sounds/coinCollect.mp3\");\r\n    this.load.audio(\"collectHeart\", \"/static/assets/sounds/getHeart.mp3\");\r\n    this.load.audio(\r\n      \"coinMultiplierCollect\",\r\n      \"/static/assets/sounds/coinMultiplierCollect.mp3\"\r\n    );\r\n    this.load.audio(\r\n      \"multiplierPotion\",\r\n      \"/static/assets/sounds/multiplierPotion.mp3\"\r\n    );\r\n    this.load.audio(\"collideEnemy\", \"/static/assets/sounds/collideEnemy.mp3\");\r\n    this.load.audio(\"scoreIncrease\", \"/static/assets/sounds/heightIncrease.mp3\");\r\n\r\n    //Death Sound\r\n    this.load.audio(\"deathSound\", \"/static/assets/sounds/deathSound.mp3\");\r\n\r\n    // Background Music\r\n    this.load.audio(\r\n      \"backgroundMusic\",\r\n      \"/static/assets/music/backgroundMusic.wav\"\r\n    );\r\n    this.load.audio(\r\n      \"invincibleMusic\",\r\n      \"/static/assets/music/invincibleMusic.wav\"\r\n    );\r\n\r\n    // Lava Sound Effects\r\n    this.load.audio(\"lava\", \"/static/assets/sounds/lavaApproaching.mp3\");\r\n    this.load.audio(\"burn\", \"/static/assets/sounds/burn.mp3\");\r\n\r\n  }\r\n\r\n  create() {\r\n    this.scene.start(\"menu\");\r\n  }\r\n}\r\n","//Function used by Phaser physics add collider method, this is passed through as a parameter within the callback function\r\nexport default function hurtPlayer() {\r\n  if (this.scene.player.enemyCollide && this.scene.hud.health !== 0) {\r\n\r\n    this.scene.hud.health -= 1;\r\n    this.scene.player.enemyCollide = false;\r\n    this.enemy.collide.play();\r\n\r\n    let hurt = setInterval(() => {\r\n      (this.scene.player.character.tint = this.scene.player.hurtAgain\r\n        ? 0xff0000\r\n        : 0xffffff),\r\n        (this.scene.player.hurtAgain = !this.scene.player.hurtAgain);\r\n    }, 100);\r\n\r\n    setTimeout(() => {\r\n      clearInterval(hurt);\r\n    }, 500);\r\n    setTimeout(() => {\r\n      this.scene.player.enemyCollide = true;\r\n      this.scene.player.character.clearTint();\r\n    }, 750);\r\n  }\r\n}\r\n","// Method checks if the first and lowest group child is below the lava. If it is, remove it.\r\nexport default function outOfBounds(scene, group) {\r\n  if (group.getChildren().length > 0) {\r\n    if (\r\n      group.getChildren()[0].y > scene.lava.lavaObj.y ||\r\n      group.getChildren()[0].x < -100 ||\r\n      group.getChildren()[0].x > 900\r\n    ) {\r\n      group.getChildren()[0].destroy();\r\n    }\r\n  }\r\n}\r\n","export default function pauseFunction(currentScene, sceneKey) {\r\n  let pKey = currentScene.input.keyboard.addKey(\"P\");\r\n\r\n  pKey.onDown = () => {\r\n    if (sceneKey == \"main\") {\r\n      currentScene.pauseSound.play()\r\n      currentScene.scene.pause(\"main\");\r\n      currentScene.scene.launch(\"pause\");\r\n    } else{\r\n      currentScene.pauseSound.play()\r\n      currentScene.scene.stop(\"pause\");\r\n      currentScene.scene.resume(\"main\");\r\n    }\r\n  };\r\n}\r\n"],"sourceRoot":""}